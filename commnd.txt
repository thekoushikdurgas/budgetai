git init
git add .
git commit -m "1-4-2025"
git remote add origin https://github.com/thekoushikdurgas/budgetai.git
git branch -M main
git push -u origin main -f

git config --global user.email "koushik.btech.cse.19@nitap.ac.in"
git config --global user.name "thekoushikdurgas"
streamlit run filemanager.py

git init
git add .
git commit -m "27-2-2025"
git branch -M main
git remote add origin https://github.com/thekoushikdurgas/budgetai.git
git push -u origin main

Enpliment the Improvements  and now read all prompts and its answers give me full and final refractor code


now apply this  give me full and final all refractor streamlit codes accordings of filemanager.py ,ai_client.py ,project_explorer.py ,ui_components.py ,utils.py

        # Display file content with detected language
        code_text = F"# ðŸ“„ File: {os.path.relpath(path, explorer.root_dir)}\n"+content+f"\n# Read {len(content)} characters from file '{path}' ({mimetypes.guess_type(path)[0]}) and then you think how this streamlit code is improveed response ofpromts and give me full and final refractor streamlit code"
        # st.write(f"ðŸ“„ File: {os.path.relpath(path, explorer.root_dir)}")
        # st.code(content, language=language, line_numbers=True)
        st.code(code_text, language=language, line_numbers=True)
        # st.write(f"Read {len(content)} characters from file '{path}' ({mimetypes.guess_type(path)[0]})")

cd android
gradlew clean
cd ..
flutter clean
flutter pub get
flutter run 

flutter clean
cd android
gradlew clean

D:\durgas\budgetapp\plan8\budgetai\android\gradlew.bat app:tasks --all --console=auto
flutter --version
flutter doctor
flutter doctor --android-licenses

flutter config --jdk-dir "C:\Program Files\Java\jdk-19"
flutter doctor --android-licenses
flutter doctor â€“verbose


flutter pub run easy_localization:generate -S assets/translations -O lib/generated -o codegen_loader.g.dart -f keys
flutter pub run easy_localization:generate -S assets/translations -O lib/generated -o locale_keys.g.dart

flutter pub run flutter_launcher_icons:main

dart migrate
flutter channel stable
flutter upgrade --force
flutter doctor -v
del pubspec.lock
flutter clean
flutter pub get
flutter pub outdated
flutter pub upgrade
flutter pub upgrade --major-versions
flutter pub upgrade --dry-run
flutter pub run flutter_launcher_icons
dart run flutter_native_splash:create
dart run build_runner clean
dart run build_runner build --delete-conflicting-outputs
dart run build_runner build
flutter pub run build_runner build
dart pub run build_runner build
dart pub add envied dev:envied_generator dev:build_runner
dart run build_runner build --define=envied_generator:envied=path=.env
flutter pub run easy_localization:generate -S assets/translations -O lib/generated -o codegen_loader.g.dart -f keys
flutter pub run easy_localization:generate -S assets/translations -O lib/generated -o locale_keys.g.dart
flutter run --android-skip-build-dependency-validation --verbose

flutter clean
flutter config --enable-windows-desktop
flutter pub get
flutter run -d windows --debug


flutter clean
flutter pub get
flutter config --enable-windows-desktop
flutter create --platforms=windows .


flutter create --platforms=android -a kotlin --org com.durgas --project-name prbal .

del pubspec.lock
flutter clean
flutter pub cache repair
flutter pub get
flutter pub run build_runner build --delete-conflicting-outputs
dart pub global activate flutterfire_cli
flutterfire configure --project=budgetai-10d1c
flutter run --android-skip-build-dependency-validation --verbose

cd D:\durgas\Prbal-App\prbal\android
gradlew cleanBuildCache --warning-mode all
cd ..
flutter clean
flutter pub cache repair
flutter pub get

cd functions
npm install
firebase deploy --only functions --project=budgetai-10d1c

npm install nodemailer @types/nodemailer
firebase functions:config:set email.user="koushik.karmaalab@gmail.com" email.pass="m@rveldurg@s591600" --project=budgetai-10d1c
firebase deploy --only functions


koushik.karmaalab@gmail.com
cpxm lqhb witd bpci




flutter run --android-skip-build-dependency-validation --verbose --warning-mode all
flutter run --android-skip-build-dependency-validation --verbose --debug

dart run easy_localization:generate --source-dir assets/translations
dart run easy_localization:generate -S assets/translations -f keys -o locale_keys.g.dart


cd android && gradlew assembleDebug --stacktrace


flutter doctor --android-licenses
dart migrate
flutter channel stable
flutter upgrade --force
flutter doctor -v
flutter clean
flutter pub get
flutter pub outdated
flutter pub upgrade
flutter pub upgrade --major-versions
flutter pub upgrade --dry-run
flutter run --android-skip-build-dependency-validation --verbose

dart run build_runner clean
dart run build_runner build --delete-conflicting-outputs
dart run build_runner build
flutter pub run build_runner build
dart pub run build_runner build
dart pub add envied dev:envied_generator dev:build_runner
dart run build_runner build --define=envied_generator:envied=path=.env

gradlew tasks
gradlew wrapper --gradle-version 8.9 --stacktrace --warning-mode all
gradlew wrapper --gradle-version 8.13 --stacktrace --warning-mode all
gradlew build
echo %JAVA_HOME%

dart format .
dart analyze .
flutter analyze .
dart analyze . > analysis.txt
dart format . > format.txt
dart run test


dart pub global activate flutterfire_cli
dart pub global deactivate flutterfire_cli
flutterfire configure --project=budgetai-7e40a
 
flutter run --verbose

flutter pub cache repair
flutter pub get

flutter clean
flutter pub get
flutter run --android-skip-build-dependency-validation --verbose
flutter run

flutter pub run intl_utils:generate

flutter run --verbose --scan -debug

flutter config --android-sdk

flutter pub cache repair


flutter analyze
cd android
gradlew signingReport --warning-mode all --stacktrace
gradlew signingReport --stacktrace --warning-mode all
gradlew wrapper --gradle-version=7.6.1 --scan
gradlew wrapper --gradle-version 8.4 --scan
gradlew wrapper --scan
gradlew wrapper --debug
gradlew wrapper --stacktrace
gradlew wrapper --stacktrace --warning-mode all

gradle --stop
yes
cd ..

flutter run --debug


MediaItem

npm install -g firebase-tools
dart pub global activate flutterfire_cli
flutterfire configure --project=budgetai-1c245




npm install -g firebase-tools
firebase login
dart pub global deactivate flutterfire_cli
dart pub global activate flutterfire_cli
flutterfire configure --project=budgetai-10d1c
C:\Users\durga\AppData\Local\Pub\Cache\bin\flutterfire.bat configure --project=budgetai-10d1c
D:/Durgas/flutter/flutterfire/flutterfire.bat configure --project=budgetai-10d1c
flutter pub add firebase_analytics	
flutter pub add firebase_app_check	
flutter pub add cloud_firestore	
flutter pub add cloud_functions	
flutter pub add firebase_messaging	
flutter pub add firebase_storage	
flutter pub add firebase_crashlytics	
flutter pub add firebase_dynamic_links	
flutter pub add firebase_in_app_messaging	
flutter pub add firebase_app_installations	
flutter pub add firebase_ml_model_downloader	
flutter pub add firebase_performance	
flutter pub add firebase_database	
flutter pub add firebase_remote_config
flutter pub add firebase_auth
flutter pub add flutter_secure_storage





flutter config --jdk-dir="C:\Program Files\Java\jdk-17"





update my codebase



======================iso==============================
cd ios
pod install





===========================================================
cd prbal\frontend
flutter pub get && dart migrate && flutter channel stable && flutter upgrade --force && flutter doctor -v && flutter clean && flutter pub get && dart migrate && flutter pub outdated && flutter pub outdated --mode=null-safety && flutter pub upgrade --major-versions && flutter pub upgrade --dry-run && dart run flutter_launcher_icons:generate -o && dart run flutter_native_splash && flutter pub run build_runner build --delete-conflicting-outputs && flutter run --android-skip-build-dependency-validation --verbose
==============================================================
cd prbal\backend
npm install













cd budgetai
- npm run android
- npm run ios # you need to use macOS to build the iOS project - use the Expo app if you need to do iOS development without a Mac
- npm run web


- cd budgetai
- npm run android
- npm run ios # you need to use macOS to build the iOS project - use the Expo app if you need to do iOS development without a Mac
- npm run web



react-native run-ios
react-native run-android

npx expo start


npx expo start --tunnel --android


npx expo install --fix


npx prettier --write .

npx eslint --fix .


npx expo bundle:analyze
npm run lint -- --format json
npx eslint .
npm run lint -- --max-warnings=0
npm audit
yarn audit
npm run lint:fix
yarn run lint:fix
npx expo start --clear

yarn audit
yarn run lint
yarn run lint:fix
npx prettier --write .
npx eslint --fix .
npm audit fix --force
npm audit fix
npm i
npm run android

yarn add @react-native-cookies/cookies
node scripts/fix-eslint-issues.js




yarn audit
yarn run lint
yarn run lint:fix
npx prettier --write .
npx eslint --fix .
yarn audit fix --force
yarn audit fix
yarn
yarn run android

yarn web
yarn ios
yarn test
yarn postinstall





yarn reset-project
yarn lint
yarn lint:fix
yarn start
yarn android


dart fix_firebase_modules.dart

flutter clean
cd android
./gradlew clean
cd ..
flutter pub get
dart run build_runner build --delete-conflicting-outputs
flutter run --verbose






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


flutter clean
cd android
./gradlew clean
cd ..
flutter pub get
flutter run